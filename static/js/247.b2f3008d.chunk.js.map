{"version":3,"file":"static/js/247.b2f3008d.chunk.js","mappings":"kMA8CA,UA1Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAOA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBR,GACbS,MAAK,SAAAC,GAAM,OAAIN,EAAQM,EAAZ,IACXC,QAAQL,GAAU,GACtB,GAAE,CAACN,KAGF,8BACGK,IACC,iCACE,iCACA,wBACGF,EAAKS,KAAI,SAAAC,GACR,IAAQC,EAAsCD,EAAtCC,GAAIC,EAAkCF,EAAlCE,KAAMC,EAA4BH,EAA5BG,aAAcC,EAAcJ,EAAdI,UAChC,OACE,2BACE,gBACEC,IACEF,EAAY,yCAC0BA,GAClC,uIAENG,IAAKJ,EACLK,MAAM,MACNC,OAAO,SAET,kCAAUN,MACV,uCAAeE,OAZRH,EAeZ,UAMZ,C,4MC1CKQ,EAAM,mCAEZC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,WAAMC,GAAN,uFACRF,IAAAA,IAAA,sCACUD,EADV,iBACsBG,IAFd,cACzBC,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBC,EAAY,mCAAG,WAAMd,GAAN,uFACHS,IAAAA,IAAA,iBACXT,EADW,oBACGQ,IAFA,cACpBI,EADoB,yBAInBA,GAJmB,2CAAH,sDAOZG,EAAc,mCAAG,WAAOJ,EAAMK,GAAb,uFACLP,IAAAA,IAAA,+BACGD,EADH,kBACgBQ,EADhB,iBAC8BL,IAFzB,cACtBC,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,wDAOdI,EAAe,mCAAG,WAAMjB,GAAN,uFACNS,IAAAA,IAAA,gBACZT,EADY,4BACUQ,EADV,2BADM,cACvBI,EADuB,yBAItBA,EAASC,KAAKK,SAJQ,2CAAH,sDAOfxB,EAAe,mCAAG,WAAMM,GAAN,uFACNS,IAAAA,IAAA,iBACXT,EADW,4BACWQ,EADX,oBADM,cACvBI,EADuB,yBAItBA,EAASC,KAAKxB,MAJQ,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/getMovies.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../../services/getMovies';\nimport { useState, useEffect } from 'react';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoad, setIsLoad] = useState(false);\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(result => setCast(result))\n      .finally(setIsLoad(true));\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoad && (\n        <>\n          <p>Cast</p>\n          <ul>\n            {cast.map(actor => {\n              const { id, name, profile_path, character } = actor;\n              return (\n                <li key={id}>\n                  <img\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                        : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcROXlnwW5Beaf7usPsiqtlik2aKsB0AqX3nMiVGH2pD8va7pWsKyOCi5XI5o3rCQO212mo&usqp=CAU'\n                    }\n                    alt={name}\n                    width=\"100\"\n                    height=\"150\"\n                  />\n                  <p>Name: {name}</p>\n                  <p>Character: {character}</p>\n                </li>\n              );\n            })}\n          </ul>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst KEY = '0888b454b4f7be0ebcd69ceb372ced29';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendsOfMovies = async page => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${KEY}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const getMovieInfo = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${KEY}`\n  );\n  return response;\n};\n\nexport const getSearchQuery = async (page, query) => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}&page=${page}`\n  );\n  return response.data;\n}\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};"],"names":["movieId","useParams","useState","cast","setCast","isLoad","setIsLoad","useEffect","getMovieCredits","then","result","finally","map","actor","id","name","profile_path","character","src","alt","width","height","KEY","axios","getTrendsOfMovies","page","response","data","getMovieInfo","getSearchQuery","query","getMovieReviews","results"],"sourceRoot":""}